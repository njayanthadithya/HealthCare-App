/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.LabAssistantRole;

import Business.BloodGroup.BloodGroup;
import Business.BloodGroup.Bloodgrouplist;
import Business.Enterprise.Enterprise;
import Business.WorkQueue.BloodReqToNewBloodBank;
import Business.WorkQueue.LabTestRequest;
import static Logger.Logger.logger;
import com.sun.glass.events.KeyEvent;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author krish
 */
public class ProcessWorkRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    LabTestRequest request;
    private BloodGroup bloodreq;
    private Bloodgrouplist bloodgrplist;
    private Enterprise enterprise;
    /**
     * Creates new form ProcessWorkRequestJPanel
     */
    public ProcessWorkRequestJPanel(JPanel userProcessContainer, LabTestRequest request, BloodGroup bloodgrp, Enterprise enterprise) {
         logger.log(Level.INFO, "ProcessWorkRequestJPanel");
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.bloodreq = bloodgrp;
        this.bloodgrplist=bloodgrplist;
        this.enterprise = enterprise;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        resultbt = new javax.swing.JButton();
        backt = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        resulttxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        impuretxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        resultbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        resultbt.setText("Submit Result");
        resultbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        resultbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultbtActionPerformed(evt);
            }
        });
        add(resultbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 270, 100, 40));

        backt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backt.setText("Back");
        backt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        backt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtActionPerformed(evt);
            }
        });
        add(backt, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 270, 90, 40));
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(313, 68, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("LAB ASSISTANT WORK AREA ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 22, 946, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Result:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(389, 139, -1, -1));
        add(resulttxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(493, 136, 100, 30));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("No of Impure Units:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 196, -1, -1));

        impuretxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                impuretxtKeyTyped(evt);
            }
        });
        add(impuretxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(493, 193, 100, 30));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imaiges/medicare image 1.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        jLabel5.setMaximumSize(new java.awt.Dimension(1500, 1000));
        jLabel5.setMinimumSize(new java.awt.Dimension(1500, 1000));
        jLabel5.setPreferredSize(new java.awt.Dimension(1500, 1000));
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtActionPerformed
         logger.log(Level.INFO, "backtActionPerformed--ProcessWorkRequestJPanel");
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        LabAssistantWorkAreaJPanel dwjp = (LabAssistantWorkAreaJPanel) component;
        dwjp.getatble();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backtActionPerformed

    private void resultbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultbtActionPerformed
        
        logger.log(Level.INFO, "resultbtActionPerformed--ProcessWorkRequestJPanel");
        String Text = resulttxt.getText();
        String impunits = impuretxt.getText();
        if(Text.isEmpty() || Text== null || impunits==null || impunits.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter all the values");
        }
        else{
        request.setResults(resulttxt.getText());
        
       
        
        String reqbloodgrp = ((LabTestRequest) request).getBloodgroup().getBloodGroup();
        int AvailableUnits = Integer.parseInt(((LabTestRequest) request).getBloodgroup().getAvailUnits());
                
                int impUnits = Integer.parseInt(impunits);
                int SentUnits = Integer.parseInt(((LabTestRequest) request).getBloodBagUnits());
                if(SentUnits < impUnits){
                    JOptionPane.showMessageDialog(null, "Total units of blood tested is " + SentUnits + "Please enter right no of units");
                    impuretxt.setEnabled(true);
                    impuretxt.setText("");
                    resulttxt.setEnabled(true);
                    return;
                }
                for( BloodGroup bg : enterprise.getBloodgrouplist().getBloodGroupAList()) {
                    if (bg.getBloodGroup().equals(reqbloodgrp)) {
                            String TotalUnits = String.valueOf(AvailableUnits + (SentUnits - impUnits));
                            ((LabTestRequest) request).getBloodgroup().setAvailUnits(TotalUnits);
                            ((LabTestRequest) request).setImpureUnits(impunits);
                            JOptionPane.showMessageDialog(null, "Request has been completed");
                            request.setTaskStatus(LabTestRequest.RequestACCEPT);
                    }
                }
        }
        resulttxt.setText("");
        impuretxt.setText("");
        resulttxt.setEnabled(false);
        impuretxt.setEnabled(false);
        resultbt.setEnabled(false);
                
        
    }//GEN-LAST:event_resultbtActionPerformed

    private void impuretxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_impuretxtKeyTyped
        // TODO add your handling code here:
         logger.log(Level.INFO, "impuretxtKeyTyped--ProcessWorkRequestJPanel");

        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar))
                || (vchar == KeyEvent.VK_BACKSPACE)
                || (vchar == KeyEvent.VK_DELETE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Please enter a number");
    }//GEN-LAST:event_impuretxtKeyTyped
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backt;
    private javax.swing.JTextField impuretxt;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton resultbt;
    private javax.swing.JTextField resulttxt;
    // End of variables declaration//GEN-END:variables
}
