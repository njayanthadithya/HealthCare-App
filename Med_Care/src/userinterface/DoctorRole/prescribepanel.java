/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.AllergyType.Allergy;
import Business.Enterprise.Enterprise;
import Business.Medicine.Medicine;
import Business.Medicine.MedAdministration;
import Business.Medicine.MedDirectory;
import Business.Patients.Patient;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.AdministrativeRole.CreatePatientJPanel;

/**
 *
 * @author Lokesh Balaji
 */
public class prescribepanel extends javax.swing.JPanel {

    /**
     * Creates new form prescribepanel
     */
    private JPanel userProcessContainer;
    private Patient patient;
    private MedDirectory medicinelist;
    private Enterprise enterprise;

    prescribepanel(JPanel userProcessContainer, Patient patient, Enterprise enterprise) {
        logger.log(Level.INFO, "prescribepanel");

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        this.medicinelist = new MedDirectory();
        this.enterprise = enterprise;
        jPanel1.setVisible(false);
        staticmedicine();
        gettable();
    }

    public void staticmedicine() {
        logger.log(Level.INFO, "staticmedicine --prescribepanel");

        ArrayList<Medicine> medsforPres = new ArrayList<Medicine>();
        Medicine paracetamol = new Medicine("Paracetamol", "clemastine", "chlorpheniramine");
        Medicine danazol = new Medicine("Danazol", "Cetirizine", "levocetirizine");
        medsforPres.add(danazol);
        medsforPres.add(paracetamol);
        medicinelist.setMedAList(medsforPres);

        DefaultTableModel mod = (DefaultTableModel) medicinetable.getModel();
        mod.setRowCount(0);
        for (Medicine loc : this.medicinelist.getMedAList()) {
            Object row[] = new Object[1];
            row[0] = loc;
            mod.addRow(row);
        }
    }

    public void gettable() {
        logger.log(Level.INFO, "gettable --prescribepanel");

        DefaultTableModel mod = (DefaultTableModel) table1.getModel();
        mod.setRowCount(0);
        for (Medicine loc : patient.getMedList().getMedAList()) {
            if (!loc.isIsdischarged()) {
                Object row[] = new Object[6];
                row[0] = loc;
                row[1] = loc.getK();
                row[2] = loc.getL();
                row[3] = loc.getRoute();

                for (MedAdministration medAdmin : loc.getMedicineadmin()) {
                    if (!medAdmin.getIsadmin()) {
                        row[4] = "No";
                    } else {
                        row[4] = "Yes";
                    }
                }
                if (loc.isIsdiscontiued()) {
                    row[5] = "Yes";
                }
                mod.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        backbt = new javax.swing.JButton();
        admindetailsbt = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        routecombo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        freqtxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        daystxt = new javax.swing.JTextField();
        prescriptbt = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicinetable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medication", "Frequency", "Duration", "Route", "Completed", "Discontinued"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table1);
        if (table1.getColumnModel().getColumnCount() > 0) {
            table1.getColumnModel().getColumn(0).setResizable(false);
            table1.getColumnModel().getColumn(1).setResizable(false);
            table1.getColumnModel().getColumn(2).setResizable(false);
            table1.getColumnModel().getColumn(3).setResizable(false);
            table1.getColumnModel().getColumn(4).setResizable(false);
            table1.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 780, 115));

        backbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backbt.setText("Back");
        backbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        backbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtActionPerformed(evt);
            }
        });
        add(backbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 80, 29));

        admindetailsbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        admindetailsbt.setText("Administration Details");
        admindetailsbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        admindetailsbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admindetailsbtActionPerformed(evt);
            }
        });
        add(admindetailsbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, 160, 29));

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Day", "Frequency", "Administered", "Administered By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(table2);
        if (table2.getColumnModel().getColumnCount() > 0) {
            table2.getColumnModel().getColumn(0).setResizable(false);
            table2.getColumnModel().getColumn(1).setResizable(false);
            table2.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 510, 780, 114));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Route of Administration:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        routecombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Route", "Oral", "Injection", "Ears", "Nose" }));
        add(routecombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 133, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Frequency (per day):");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));
        add(freqtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 133, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Duration (Days):");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, -1));
        add(daystxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 133, -1));

        prescriptbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        prescriptbt.setText("Prescribe");
        prescriptbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        prescriptbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescriptbtActionPerformed(evt);
            }
        });
        add(prescriptbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 80, 29));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("View List");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 240, 80, 29));

        medicinetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medication List"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(medicinetable);
        if (medicinetable.getColumnModel().getColumnCount() > 0) {
            medicinetable.getColumnModel().getColumn(0).setResizable(false);
        }

        jPanel1.add(jScrollPane1);

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 460, 190));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Prescribe Details");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 880, 30));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imaiges/medicare image 1.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        jLabel5.setMaximumSize(new java.awt.Dimension(1500, 1000));
        jLabel5.setMinimumSize(new java.awt.Dimension(1500, 1000));
        jLabel5.setPreferredSize(new java.awt.Dimension(1500, 1000));
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "backbtActionPerformed --prescribepanel");

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backbtActionPerformed

    private void prescriptbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescriptbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "prescriptbtActionPerformed --prescribepanel");

        if (routecombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select route of Administration");
            return;
        }
        if (daystxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please input frequency");
            return;
        }
        if (freqtxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please input Duration");
            return;
        }
        int selectedRow = medicinetable.getSelectedRow();
        if (selectedRow >= 0) {
            Medicine med = (Medicine) medicinetable.getValueAt(selectedRow, 0);
            med.setRoute(routecombo.getSelectedItem().toString());

            if (patient.getAllergies().getAllergyList().size() > 0) {
                for (Allergy a : patient.getAllergies().getAllergyList()) {
                    for (String s : a.getCmp()) {
                        if (med.getCmpname1().equals(s) || med.getCmpname2().equals(s)) {
                            int yesno = JOptionPane.YES_NO_OPTION;
                            int option = JOptionPane.showConfirmDialog(userProcessContainer, "The medication has a substance which is "
                                    + "allergic to the patient. Do you still want to prescribe?", "Override Warning",
                                    yesno);
                            if (option == JOptionPane.YES_OPTION) {
                                patient.getMedList().addMed(med, Integer.parseInt(daystxt.getText()), Integer.parseInt(freqtxt.getText()));

                                gettable();
                                return;
                            } else {
                                gettable();
                                return;
                            }
                        }
                    }
                }
                patient.getMedList().addMed(med, Integer.parseInt(daystxt.getText()), Integer.parseInt(freqtxt.getText()));
                gettable();
                return;
            } else {
                patient.getMedList().addMed(med, Integer.parseInt(daystxt.getText()), Integer.parseInt(freqtxt.getText()));



                gettable();
                return;
            }
        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Please Select a Medication");
            return;
        }
    }//GEN-LAST:event_prescriptbtActionPerformed

    private void admindetailsbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admindetailsbtActionPerformed
        // TODO add your handling code here:
       logger.log(Level.INFO, "admindetailsbtActionPerformed --prescribepanel");

        int selectedRow = table1.getSelectedRow();
        if (selectedRow >= 0) {
            Medicine med = (Medicine) table1.getValueAt(selectedRow, 0);
            DefaultTableModel mod = (DefaultTableModel) table2.getModel();
            mod.setRowCount(0);
            for (MedAdministration medAdmin : med.getMedicineadmin()) {
                Object row[] = new Object[4];
                row[0] = medAdmin.getDay();
                row[1] = medAdmin.getTime();
                row[2] = medAdmin.getIsadmin();
                row[3] = medAdmin.getAdministered();
                mod.addRow(row);
            }
        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select the medication");
            return;
        }
    }//GEN-LAST:event_admindetailsbtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       jPanel1.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton admindetailsbt;
    private javax.swing.JButton backbt;
    private javax.swing.JTextField daystxt;
    private javax.swing.JTextField freqtxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable medicinetable;
    private javax.swing.JButton prescriptbt;
    private javax.swing.JComboBox<String> routecombo;
    private javax.swing.JTable table1;
    private javax.swing.JTable table2;
    // End of variables declaration//GEN-END:variables
}
