/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CovidCare;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.CovidCare.CovidCareList;
import Business.CovidCare.CovidCareRequirementType;
import Business.Organization.ManagerOrganization;
import Business.Organization.CCarePhysicianOrganization;
import Business.UserAccount.UserAccount;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author monishmm
 */
public class UpdateCovidtypeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form OBLabWorkArea
     */
    private JPanel userProcessContainer;
    private CCarePhysicianOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private CovidCareRequirementType organtype;
    private CovidCareList organlist;
    
    
    public UpdateCovidtypeJPanel(JPanel userProcessContainer, CovidCareRequirementType organtype, CovidCareList organlist, Enterprise enterprise,UserAccount useraccount) {
          logger.log(Level.INFO, "OBUpdateOrgantypeJPanel");
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount=useraccount;
        this.organtype = organtype;
        this.organlist = organlist;
        updateDetails();

    }
    
        private void updateDetails() {
        logger.log(Level.INFO, "updateDetails --OBUpdateOrgantypeJPanel");

        organtypetxt.setText(organtype.getRequirementType());
        String orgntypeunits = organtype.getAvailUnits();
        availunitstxt.setText(orgntypeunits);

        organtypetxt.setEnabled(false);
        Noofunitstxt.setEnabled(false);
        savebt.setEnabled(false);
        updatebt.setEnabled(true);
        availunitstxt.setEnabled(false);
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        availunitstxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Noofunitstxt = new javax.swing.JTextField();
        updatebt = new javax.swing.JButton();
        backbt = new javax.swing.JButton();
        savebt = new javax.swing.JButton();
        organtypetxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Update OrganType Details");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 30, 770, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Organ Type");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Available Units:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, -1, -1));

        availunitstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availunitstxtActionPerformed(evt);
            }
        });
        add(availunitstxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, 116, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("No of Units to be added:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, -1, -1));

        Noofunitstxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NoofunitstxtKeyTyped(evt);
            }
        });
        add(Noofunitstxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, 116, -1));

        updatebt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updatebt.setText("Update");
        updatebt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        updatebt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtActionPerformed(evt);
            }
        });
        add(updatebt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 90, 29));

        backbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backbt.setText("Back");
        backbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        backbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtActionPerformed(evt);
            }
        });
        add(backbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 280, 90, 29));

        savebt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        savebt.setText("Save");
        savebt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        savebt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtActionPerformed(evt);
            }
        });
        add(savebt, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, 90, 29));
        add(organtypetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 116, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imaiges/medicare image 1.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(1500, 1000));
        jLabel1.setMinimumSize(new java.awt.Dimension(1500, 1000));
        jLabel1.setPreferredSize(new java.awt.Dimension(1500, 1000));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void availunitstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availunitstxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availunitstxtActionPerformed

    private void NoofunitstxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NoofunitstxtKeyTyped
        // TODO add your handling code here:
        logger.log(Level.INFO, "NoofunitstxtKeyTyped --OBUpdateOrgantypeJPanel");

        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar))
            || (vchar == KeyEvent.VK_BACK_SPACE)
            || (vchar == KeyEvent.VK_DELETE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Please enter a number");
        }
    }//GEN-LAST:event_NoofunitstxtKeyTyped

    private void updatebtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "updatebtActionPerformed --OBUpdateOrgantypeJPanel");
        
        organtypetxt.setEnabled(false);
        Noofunitstxt.setEnabled(true);
        savebt.setEnabled(true);
        updatebt.setEnabled(false);
        this.availunitstxt.setEnabled(false);

    }//GEN-LAST:event_updatebtActionPerformed

    private void backbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtActionPerformed

        logger.log(Level.INFO, "backbtActionPerformed --OBUpdateOrgantypeJPanel");

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CovidPhysicianWorkArea obcl = (CovidPhysicianWorkArea) component;
        obcl.gettable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backbtActionPerformed

    private void savebtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "savebtActionPerformed --OBUpdateOrgantypeJPanel");

        try{
            String ot = organtypetxt.getText();
            String nu = Noofunitstxt.getText();
            int newUnits = Integer.parseInt(nu);
            int existingUnits = Integer.parseInt(organtype.getAvailUnits());
            String totalUnits = String.valueOf(newUnits + existingUnits);

            if(nu.isEmpty() || nu == null )
            {
                JOptionPane.showMessageDialog(null, "Fields cannot be empty");
                return;
            }

            else{
                organtype.setRequirementType(ot);
                organtype.setAvailUnits(totalUnits);
                JOptionPane.showMessageDialog(null, "OrganType details updated successfully");
            }
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Fields cannot be empty");
            return;
        }

        organtypetxt.setEnabled(false);
        Noofunitstxt.setEnabled(false);
        this.availunitstxt.setEnabled(false);
        savebt.setEnabled(false);

    }//GEN-LAST:event_savebtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Noofunitstxt;
    private javax.swing.JTextField availunitstxt;
    private javax.swing.JButton backbt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField organtypetxt;
    private javax.swing.JButton savebt;
    private javax.swing.JButton updatebt;
    // End of variables declaration//GEN-END:variables
}
