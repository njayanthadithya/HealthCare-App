/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Location.Location;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Patients.Patient;
import Business.Roles.Role;
import Business.UserAccount.UserAccount;
import Business.UserAccount.Useraccountdirectory;
import static Logger.Logger.logger;
//import Mail.SendMail;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
//import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author monishmm
 */
public class CreateAppointmentJPanel extends javax.swing.JPanel {

    private Enterprise enterprise;
    private JPanel userProcessContainer;

    /**
     * Creates new form CreateAppointmentJPanel
     */
    public CreateAppointmentJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        logger.log(Level.INFO, "CreateAppointmentpanel");

        initComponents();
        this.enterprise = enterprise;
        this.userProcessContainer = userProcessContainer;
        jPanel1.setVisible(false);
        getComboBox();
    }

    public void getComboBox() {
        logger.log(Level.INFO, "getComboBox --CreateAppointmentpanel");

        OrganizationDirectory orgdir = enterprise.getOrganizationdirectory();

        for (Organization org : orgdir.getOrganizationAList()) {
            if (org.getOrganzationName().equals("Doctor Organization")) {
                for (Employee u : org.getEmployeedirectory().getEmployeeAList()) {
                    doctorcombo.addItem(u.toString());
                }
            }
        }
        for (Location location : enterprise.getLocationlist().getLocationAList()) {
            locationcombo.addItem(location.getLocName());
        }

    }

    public void gettable(String search) {
        logger.log(Level.INFO, "gettable --CreateAppointmentpanel");

        DefaultTableModel appointmodel = (DefaultTableModel) appointmenttable.getModel();
        appointmodel.setRowCount(0);
        for (Patient patient : enterprise.getPatientdirectory().getPatientAList()) {
            if (patient.getpName().startsWith(search)) {
                Object row[] = new Object[2];
                row[0] = patient;
                row[1] = patient.getPatientHRN();
                appointmodel.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        admitbt = new javax.swing.JButton();
        backbt = new javax.swing.JButton();
        lblPatient = new javax.swing.JLabel();
        searchbt = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        lblDoctor = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        doctorcombo = new javax.swing.JComboBox<>();
        locationcombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        appointmenttable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        admitbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        admitbt.setText("Admit");
        admitbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        admitbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admitbtActionPerformed(evt);
            }
        });
        add(admitbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, 80, 29));

        backbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backbt.setText("Back");
        backbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        backbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtActionPerformed(evt);
            }
        });
        add(backbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, 60, 29));

        lblPatient.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblPatient.setText("Patient Name");
        add(lblPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, -1, -1));

        searchbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchbt.setText("Search");
        searchbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        searchbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtActionPerformed(evt);
            }
        });
        add(searchbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, 70, 29));
        add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 110, -1));

        lblDoctor.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblDoctor.setText("Doctor");
        add(lblDoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, -1, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Location");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, -1, -1));

        doctorcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Doctor" }));
        add(doctorcombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, 113, -1));

        locationcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Location" }));
        add(locationcombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Appointment");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 20, 980, 30));

        appointmenttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Patient ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(appointmenttable);
        if (appointmenttable.getColumnModel().getColumnCount() > 0) {
            appointmenttable.getColumnModel().getColumn(0).setResizable(false);
            appointmenttable.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel1.add(jScrollPane1);

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, 530, 220));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imaiges/medicare image 1.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jLabel2.setMaximumSize(new java.awt.Dimension(1500, 1000));
        jLabel2.setMinimumSize(new java.awt.Dimension(1500, 1000));
        jLabel2.setPreferredSize(new java.awt.Dimension(1500, 1000));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void admitbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admitbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "admitbtActionPerformed --CreateAppointmentpanel");

        if (doctorcombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Choose a Doctor");
            return;
        }
        if (locationcombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Choose a Location");
            return;
        }

        int selectedRow = appointmenttable.getSelectedRow();
        if (selectedRow >= 0) {
            Patient patient = (Patient) appointmenttable.getValueAt(selectedRow, 0);
            if (patient.getDoctorName() != null) {
                JOptionPane.showMessageDialog(userProcessContainer, "Patient is already admitted and assigned to " + patient.getDoctorName().getEmployeeName());
                return;
            }
            String emp = doctorcombo.getSelectedItem().toString();
            ArrayList<Organization> org = enterprise.getOrganizationdirectory().getOrganizationAList();
            for (Organization o : org) {
             if (o.getOrganzationName().equals("Doctor Organization")) {
             for (Employee employee : o.getEmployeedirectory().getEmployeeAList()) {
             if (employee.getEmployeeName().equals(emp)) {
                String locs = locationcombo.getSelectedItem().toString();
                    for (Location location : enterprise.getLocationlist().getLocationAList()) {
                        if (location.getLocName().equals(locs)) {
                           if (location.getNurseAList().size() == 0) {
                                 JOptionPane.showMessageDialog(userProcessContainer, "Currently nurse is not available");
                                 return;
                                  }
                                    if (location.getMax() >= (location.getCount() + 1)) {
                                        patient.setDoctorName(employee);
                                        patient.setLocation(location);
                                        location.setCount(location.getCount() + 1);
                                        patient.setIsDischarged(false);
                                        JOptionPane.showMessageDialog(userProcessContainer, "Patient Admitted");
//                                        
                                        return;
                                    } else {
                                        JOptionPane.showMessageDialog(userProcessContainer, location.getLocName()
                                                + " is already full");
                                        return;
                                    }

                                }
                            }
                        }
                    }
                }
            }

        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Select a Patient");
            return;
        }
    }//GEN-LAST:event_admitbtActionPerformed

    private void searchbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "searchbtActionPerformed --CreateAppointmentpanel");
        this.gettable(txtSearch.getText());
        jPanel1.setVisible(true);
    }//GEN-LAST:event_searchbtActionPerformed

    private void backbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "backbtActionPerformed --CreateAppointmentpanel");

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backbtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton admitbt;
    private javax.swing.JTable appointmenttable;
    private javax.swing.JButton backbt;
    private javax.swing.JComboBox<String> doctorcombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDoctor;
    private javax.swing.JLabel lblPatient;
    private javax.swing.JComboBox<String> locationcombo;
    private javax.swing.JButton searchbt;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
