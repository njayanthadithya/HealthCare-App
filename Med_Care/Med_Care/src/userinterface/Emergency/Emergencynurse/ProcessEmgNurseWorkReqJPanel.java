/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Emergency.Emergencynurse;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.AdminOrganization;
import Business.Organization.PhysicianOrganization;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BloodReqToBloodBankfromEmg;
import Business.WorkQueue.MessageNurseToHosRequest;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.TransportRequest;
import Business.WorkQueue.EmgNurseRequest;
import Business.WorkQueue.CCarerequestToCCarefromEMS;
import static Logger.Logger.logger;

import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ksahi
 */
public class ProcessEmgNurseWorkReqJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessEMSNurseWorkRequest
     */
    private JPanel userProcessContainer;
    private OrganizationDirectory organizatindirectory;
    private Organization organization;
    private Enterprise enterprise;
    private UserAccount useraccount;
    private EmgNurseRequest nurse;
    private EcoSystem ecosystem;
    private Network network;

    public ProcessEmgNurseWorkReqJPanel(JPanel userProcessContainer, UserAccount useraccount,
            EmgNurseRequest nurse, EcoSystem ecosystem, Enterprise enterprise) {
        logger.log(Level.INFO, "ProcessEMSNurseWorkRequestJPanel");

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.useraccount = useraccount;
        this.nurse = nurse;
        this.ecosystem = ecosystem;
        this.network = network;
        this.enterprise = enterprise;
        this.organization = organization;
        getpatientname();
        getcombobox();
        getBB();
        getCC();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        bloodneededBB2 = new javax.swing.JLabel();
        btnYesBB2 = new javax.swing.JRadioButton();
        btnNoBB2 = new javax.swing.JRadioButton();
        emsnursewkarea = new javax.swing.JLabel();
        CCreqLbl = new javax.swing.JLabel();
        reqCovidtype = new javax.swing.JLabel();
        noofunitsOB = new javax.swing.JLabel();
        Covidcenterlbl = new javax.swing.JLabel();
        sendreqtoccbtn = new javax.swing.JButton();
        patreqnameCC = new javax.swing.JTextField();
        ptnameOB = new javax.swing.JLabel();
        chooseCovidTypecombo = new javax.swing.JComboBox<>();
        unitstxtOB = new javax.swing.JTextField();
        CCcombobox = new javax.swing.JComboBox<>();
        msgtohoslbl = new javax.swing.JLabel();
        ptname = new javax.swing.JLabel();
        patnametxt = new javax.swing.JTextField();
        BBReqLbl = new javax.swing.JLabel();
        bloodneededBB = new javax.swing.JLabel();
        bloodgrouplb = new javax.swing.JLabel();
        ptnameBB = new javax.swing.JLabel();
        noofunitsLb = new javax.swing.JLabel();
        BloodBankLbl = new javax.swing.JLabel();
        bloodbankcombo = new javax.swing.JComboBox<>();
        unitstxtBB = new javax.swing.JTextField();
        choosebloodcombo = new javax.swing.JComboBox<>();
        patreqnameBB = new javax.swing.JTextField();
        btnBackBB = new javax.swing.JButton();
        sendreqbtBB = new javax.swing.JButton();
        btnYesBB = new javax.swing.JRadioButton();
        btnNoBB = new javax.swing.JRadioButton();
        bloodneededBB1 = new javax.swing.JLabel();
        btnYesBB1 = new javax.swing.JRadioButton();
        btnNoBB1 = new javax.swing.JRadioButton();
        bloodneededBB3 = new javax.swing.JLabel();
        btnYesBB3 = new javax.swing.JRadioButton();
        btnNoBB3 = new javax.swing.JRadioButton();
        bloodneededBB4 = new javax.swing.JLabel();
        btnYesBB4 = new javax.swing.JRadioButton();
        btnNoBB4 = new javax.swing.JRadioButton();
        ccneededBB5 = new javax.swing.JLabel();
        btnYesCC = new javax.swing.JRadioButton();
        btnNoCC = new javax.swing.JRadioButton();
        btnYesBB6 = new javax.swing.JRadioButton();
        btnNoBB6 = new javax.swing.JRadioButton();
        btnYesBB7 = new javax.swing.JRadioButton();
        btnNoBB7 = new javax.swing.JRadioButton();
        btnYesBB8 = new javax.swing.JRadioButton();
        btnNoBB8 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        bloodneededBB2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bloodneededBB2.setText("Blood Needed :");

        buttonGroup2.add(btnYesBB2);
        btnYesBB2.setText("Yes");
        btnYesBB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesBB2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(btnNoBB2);
        btnNoBB2.setText("No");

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        emsnursewkarea.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        emsnursewkarea.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emsnursewkarea.setText("NURSE WORK AREA");
        add(emsnursewkarea, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1060, 24));

        CCreqLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        CCreqLbl.setText("CovidCare Request");
        add(CCreqLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 400, -1, 20));

        reqCovidtype.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        reqCovidtype.setText("Required Covid care type :");
        add(reqCovidtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 540, -1, 20));

        noofunitsOB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        noofunitsOB.setText("No of units :");
        add(noofunitsOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 580, -1, 20));

        Covidcenterlbl.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Covidcenterlbl.setText("Covid Center:");
        add(Covidcenterlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 620, -1, 20));

        sendreqtoccbtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sendreqtoccbtn.setText("Send Request to covid center");
        sendreqtoccbtn.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        sendreqtoccbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendreqtoccbtnActionPerformed(evt);
            }
        });
        add(sendreqtoccbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 670, 230, 30));
        add(patreqnameCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 500, 209, 30));

        ptnameOB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ptnameOB.setText("Patient Name :");
        add(ptnameOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 500, -1, 20));

        chooseCovidTypecombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose type", "RTPCR", "Plasma", "Rapidtest kit", "Ventilator" }));
        add(chooseCovidTypecombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 540, 210, 30));
        add(unitstxtOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 580, 209, 30));

        CCcombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Covid Center" }));
        CCcombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CCcomboboxActionPerformed(evt);
            }
        });
        add(CCcombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 620, 210, 30));

        msgtohoslbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        msgtohoslbl.setText("Message to Hospital");
        add(msgtohoslbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, -1, -1));

        ptname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ptname.setText("Patient Name :");
        add(ptname, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, -1, -1));
        add(patnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, 209, -1));

        BBReqLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        BBReqLbl.setText("Bloodbank Request");
        add(BBReqLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 400, -1, -1));

        bloodneededBB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bloodneededBB.setText("Blood Needed :");
        add(bloodneededBB, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, -1, -1));

        bloodgrouplb.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bloodgrouplb.setText("Required Blood Group :");
        add(bloodgrouplb, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 540, -1, -1));

        ptnameBB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ptnameBB.setText("Patient Name :");
        add(ptnameBB, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 500, -1, -1));

        noofunitsLb.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        noofunitsLb.setText("No of units :");
        add(noofunitsLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 580, -1, -1));

        BloodBankLbl.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        BloodBankLbl.setText("BloodBank :");
        add(BloodBankLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 630, -1, -1));

        bloodbankcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Blood Bank" }));
        add(bloodbankcombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 630, 210, -1));

        unitstxtBB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitstxtBBActionPerformed(evt);
            }
        });
        unitstxtBB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                unitstxtBBKeyTyped(evt);
            }
        });
        add(unitstxtBB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 580, 209, -1));

        choosebloodcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a blood group", "O+", "O-", "A+", "A-", "B+", "B-", "AB+", "AB-", " " }));
        choosebloodcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosebloodcomboActionPerformed(evt);
            }
        });
        add(choosebloodcombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 540, 210, -1));
        add(patreqnameBB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 500, 209, -1));

        btnBackBB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBackBB.setText(" Back");
        btnBackBB.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        btnBackBB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackBBActionPerformed(evt);
            }
        });
        add(btnBackBB, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 770, 120, 40));

        sendreqbtBB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sendreqbtBB.setText("Send Request to Blood Bank");
        sendreqbtBB.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        sendreqbtBB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendreqbtBBActionPerformed(evt);
            }
        });
        add(sendreqbtBB, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 680, 240, 30));

        buttonGroup2.add(btnYesBB);
        btnYesBB.setText("Yes");
        btnYesBB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesBBActionPerformed(evt);
            }
        });
        add(btnYesBB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, -1, 30));

        buttonGroup2.add(btnNoBB);
        btnNoBB.setText("No");
        add(btnNoBB, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, -1, 30));

        bloodneededBB1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bloodneededBB1.setText("Blood Needed :");
        add(bloodneededBB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, -1, -1));

        buttonGroup2.add(btnYesBB1);
        btnYesBB1.setText("Yes");
        btnYesBB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesBB1ActionPerformed(evt);
            }
        });
        add(btnYesBB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, -1, 30));

        buttonGroup2.add(btnNoBB1);
        btnNoBB1.setText("No");
        add(btnNoBB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, -1, 30));

        bloodneededBB3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bloodneededBB3.setText("Blood Needed :");
        add(bloodneededBB3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, -1, -1));

        buttonGroup2.add(btnYesBB3);
        btnYesBB3.setText("Yes");
        btnYesBB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesBB3ActionPerformed(evt);
            }
        });
        add(btnYesBB3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, -1, 30));

        buttonGroup2.add(btnNoBB3);
        btnNoBB3.setText("No");
        add(btnNoBB3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, -1, 30));

        bloodneededBB4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bloodneededBB4.setText("Blood Needed :");
        add(bloodneededBB4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, -1, -1));

        buttonGroup2.add(btnYesBB4);
        btnYesBB4.setText("Yes");
        btnYesBB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesBB4ActionPerformed(evt);
            }
        });
        add(btnYesBB4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, -1, 30));

        buttonGroup2.add(btnNoBB4);
        btnNoBB4.setText("No");
        add(btnNoBB4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, -1, 30));

        ccneededBB5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ccneededBB5.setText("Covid care Needed :");
        add(ccneededBB5, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 460, 130, 20));

        buttonGroup2.add(btnYesCC);
        btnYesCC.setText("Yes");
        btnYesCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesCCActionPerformed(evt);
            }
        });
        add(btnYesCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 450, -1, 30));

        buttonGroup2.add(btnNoCC);
        btnNoCC.setText("No");
        add(btnNoCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 450, -1, 30));

        buttonGroup2.add(btnYesBB6);
        btnYesBB6.setText("Yes");
        btnYesBB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesBB6ActionPerformed(evt);
            }
        });
        add(btnYesBB6, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 450, -1, 30));

        buttonGroup2.add(btnNoBB6);
        btnNoBB6.setText("No");
        add(btnNoBB6, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 450, -1, 30));

        buttonGroup2.add(btnYesBB7);
        btnYesBB7.setText("Yes");
        btnYesBB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesBB7ActionPerformed(evt);
            }
        });
        add(btnYesBB7, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 450, -1, 30));

        buttonGroup2.add(btnNoBB7);
        btnNoBB7.setText("No");
        add(btnNoBB7, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 450, -1, 30));

        buttonGroup2.add(btnYesBB8);
        btnYesBB8.setText("Yes");
        btnYesBB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesBB8ActionPerformed(evt);
            }
        });
        add(btnYesBB8, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 450, -1, 30));

        buttonGroup2.add(btnNoBB8);
        btnNoBB8.setText("No");
        add(btnNoBB8, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 450, -1, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imaiges/medicare image 1.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-740, -30, 1920, 1150));
    }// </editor-fold>//GEN-END:initComponents

    private void unitstxtBBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitstxtBBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitstxtBBActionPerformed

    private void unitstxtBBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unitstxtBBKeyTyped
        // TODO add your handling code here:
        logger.log(Level.INFO, "unitstxtBBKeyTyped --ProcessEMSNurseWorkRequestJPanel");

        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar))
            || (vchar == KeyEvent.VK_BACK_SPACE)
            || (vchar == KeyEvent.VK_DELETE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Please enter a number");
        }
    }//GEN-LAST:event_unitstxtBBKeyTyped

    private void choosebloodcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosebloodcomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_choosebloodcomboActionPerformed

    private void btnBackBBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackBBActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnBackBBActionPerformed --ProcessEMSNurseWorkRequestJPanel");

        if (sendreqbtBB.isEnabled() == false  && sendreqtoccbtn.isEnabled() == false) {

            nurse.setTaskStatus(EmgNurseRequest.RequestCOMPLETED);

        }

        if (sendreqbtBB.isEnabled() == true &&  sendreqtoccbtn.isEnabled() == true) {
            JOptionPane.showMessageDialog(null, "Operation not allowed unless the work request is completed");
            return;
        }
//        if (sendreqbtBB.isEnabled() == true && sendreqtoOBbtn.isEnabled() == true) {
//            JOptionPane.showMessageDialog(null, "Operation not allowed unless the work request is completed");
//            return;
//        }
//        if (sendreqbtBB.isEnabled() == false && sendreqtoOBbtn.isEnabled() == false) {
//            JOptionPane.showMessageDialog(null, "Operation not allowed unless the work request is completed");
//            return;
//        }
        if (sendreqbtBB.isEnabled() == false &&  sendreqtoccbtn.isEnabled() == true) {
            JOptionPane.showMessageDialog(null, "Operation not allowed unless the work request is completed");
            return;
        }
//        if (sendreqbtBB.isEnabled() == false && sendreqtoOBbtn.isEnabled() == true) {
//            JOptionPane.showMessageDialog(null, "Operation not allowed unless the work request is completed");
//            return;
//        }
        if (sendreqbtBB.isEnabled() == true && sendreqtoccbtn.isEnabled() == false) {
            JOptionPane.showMessageDialog(null, "Operation not allowed unless the work request is completed");
            return;
        }
        
//        if (sendreqbtBB.isEnabled() == true && sendreqtoOBbtn.isEnabled() == false) {
//            JOptionPane.showMessageDialog(null, "Operation not allowed unless the work request is completed");
//            return;
//        }

        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        Component[] comps = this.userProcessContainer.getComponents();
        for (Component comp : comps) {
            if (comp instanceof EmgNurseWorkAreaJPanel) {
                EmgNurseWorkAreaJPanel createP = (EmgNurseWorkAreaJPanel) comp;
                createP.gettable();
                createP.gettableBB();
                createP.gettableOB();

            }
            layout.previous(userProcessContainer);
        }
    }//GEN-LAST:event_btnBackBBActionPerformed

    private void sendreqbtBBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendreqbtBBActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "sendreqbtBBActionPerformed --ProcessEMSNurseWorkRequestJPanel");

        if (bloodbankcombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select the BloodBank you like to request blood");
            return;
        }

        buttonGroup2.clearSelection();
        
       // btnNoOB.setSelected(true);
        String noofUnits = unitstxtBB.getText();
        if (noofUnits.length() > 1) {
            JOptionPane.showMessageDialog(null, "Maximum units allowed is 9");
            return;
        }
        if (choosebloodcombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please choose a bloodgroup");
            return;
        }

        String bloodgrp = String.valueOf(choosebloodcombo.getSelectedItem());
        String patname = patreqnameBB.getText();

        BloodReqToBloodBankfromEmg blood = new BloodReqToBloodBankfromEmg(patname, bloodgrp, noofUnits);
        blood.setpName(patname);
        blood.setBloodGroup(bloodgrp);
        blood.setRequestedUnits(noofUnits);
        blood.setIssuer(useraccount);

        blood.setTaskStatus(BloodReqToBloodBankfromEmg.RequestPENDING);

        for (Network network : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterprisedirectory().getEnterpriselist()) {
                if (enterprise.getEnterprisetype() == Enterprise.EnterpriseType.BloodBank && enterprise.getOrganzationName().equals(bloodbankcombo.getSelectedItem())) {
                    enterprise.getWorkqueue().getWorkRequestAList().add(blood);
                    useraccount.getWorkqueue().getWorkRequestAList().add(blood);
                    break;
                }
            }
        }

        JOptionPane.showMessageDialog(null, "Your request has been sent to BloodBank");
        sendreqbtBB.setEnabled(false);
        patnametxt.setText("");
        patreqnameBB.setText("");
        unitstxtBB.setText("");
        choosebloodcombo.setSelectedIndex(0);
        choosebloodcombo.setEnabled(false);
        unitstxtBB.setEnabled(false);
        bloodbankcombo.setEnabled(false);
        btnYesBB.setEnabled(false);
        if (sendreqbtBB.isEnabled() == false && sendreqtoccbtn.isEnabled() == false) {

            nurse.setTaskStatus(EmgNurseRequest.RequestCOMPLETED);

        }
    }//GEN-LAST:event_sendreqbtBBActionPerformed

    private void sendreqtoccbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendreqtoccbtnActionPerformed
        // TODO add your handling code here:
        
      logger.log(Level.INFO, "sendreqtoOBbtnActionPerformed --ProcessEMSNurseWorkRequestJPanel");

        if (CCcombobox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select the OrganBank you like to request Organ from!");
            return;
        }

        buttonGroup1.clearSelection();
        String noofUnits = unitstxtOB.getText();
        if (noofUnits.length() > 1) {
            JOptionPane.showMessageDialog(null, "Maximum units allowed is 9");
            return;
        }
        if (chooseCovidTypecombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please choose a OrganType");
            return;
        }

        String organtype = String.valueOf(chooseCovidTypecombo.getSelectedItem());
        String patname = patreqnameCC.getText();



        CCarerequestToCCarefromEMS orgn = new CCarerequestToCCarefromEMS(patname, organtype, noofUnits);
        orgn.setpName(patname);
        orgn.setCCareType(organtype);
        orgn.setReqUnits(noofUnits);
        orgn.setIssuer(useraccount);


        orgn.setTaskStatus(CCarerequestToCCarefromEMS.RequestPENDING);

        for (Network network : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterprisedirectory().getEnterpriselist()) {
                if (enterprise.getEnterprisetype() == Enterprise.EnterpriseType.CovidCare && enterprise.getOrganzationName().equals(CCcombobox.getSelectedItem())) {
                    enterprise.getWorkqueue().getWorkRequestAList().add(orgn);
                    useraccount.getWorkqueue().getWorkRequestAList().add(orgn);
                    break;
                }
            }
        }

        JOptionPane.showMessageDialog(null, "Your request has been sent to Covidcare");
        sendreqtoccbtn.setEnabled(false);
        patnametxt.setText("");
        patreqnameCC.setText("");
        unitstxtOB.setText("");
        chooseCovidTypecombo.setSelectedIndex(0);
        chooseCovidTypecombo.setEnabled(false);
        CCcombobox.setEnabled(false);
        unitstxtOB.setEnabled(false);
        CCcombobox.setEnabled(false);
        btnYesCC.setEnabled(false);
        if (sendreqtoccbtn.isEnabled() == false && sendreqbtBB.isEnabled() == false) {

            nurse.setTaskStatus(EmgNurseRequest.RequestCOMPLETED);
        }
  
    }//GEN-LAST:event_sendreqtoccbtnActionPerformed

    private void btnYesBBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesBBActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnYesBBActionPerformed --ProcessEMSNurseWorkRequestJPanel");

        sendreqbtBB.setEnabled(true);
        unitstxtBB.setEnabled(true);
        choosebloodcombo.setEnabled(true);
        bloodbankcombo.setEnabled(true);
        btnNoBB.setEnabled(false);
 
    }//GEN-LAST:event_btnYesBBActionPerformed

    private void CCcomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CCcomboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CCcomboboxActionPerformed

    private void btnYesBB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesBB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYesBB1ActionPerformed

    private void btnYesBB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesBB2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYesBB2ActionPerformed

    private void btnYesBB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesBB3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYesBB3ActionPerformed

    private void btnYesBB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesBB4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYesBB4ActionPerformed

    private void btnYesCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesCCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYesCCActionPerformed

    private void btnYesBB6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesBB6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYesBB6ActionPerformed

    private void btnYesBB7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesBB7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYesBB7ActionPerformed

    private void btnYesBB8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesBB8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYesBB8ActionPerformed

 

    private void getpatientname() {
        logger.log(Level.INFO, "getpatientname --ProcessEMSNurseWorkRequestJPanel");

        
        patnametxt.setEnabled(false);
        //sendmsgtoHospitalbtn.setEnabled(true);
//        transferHospital.setEnabled(true);
        patnametxt.setText(nurse.getEmgPatient().getpName());
      //  msgtxt.setEnabled(true);
        
        //for Blood bank
        btnNoBB.setSelected(true);
        patreqnameBB.setEnabled(false);
        sendreqbtBB.setEnabled(false);
        bloodbankcombo.setEnabled(false);
        unitstxtBB.setEnabled(false);
        choosebloodcombo.setEnabled(false);
        patreqnameBB.setText(nurse.getEmgPatient().getpName());
        
        
        //for CCare bank
        btnNoCC.setSelected(true);
        patreqnameCC.setEnabled(false);
        sendreqtoccbtn.setEnabled(false);
        CCcombobox.setEnabled(false);
        unitstxtOB.setEnabled(false);
        chooseCovidTypecombo.setEnabled(false);
        patreqnameCC.setText(nurse.getEmgPatient().getpName());
        
    }

    public void getcombobox() {
        logger.log(Level.INFO, "getcombobox --ProcessEMSNurseWorkRequestJPanel");

        for (Network net : ecosystem.getNetworkList()) {
            for (Enterprise ent : net.getEnterprisedirectory().getEnterpriselist()) {
                if (!ent.getOrganzationName().equals(this.enterprise.getOrganzationName())
                        && ent.getEnterprisetype() == Enterprise.EnterpriseType.Hospital) {
//                    transferHospital.addItem(ent.getName());
                }
            }
        }
    }

    public void getBB() {
        logger.log(Level.INFO, "getBB --ProcessEMSNurseWorkRequestJPanel");

        for (Network net : ecosystem.getNetworkList()) {
            for (Enterprise e : net.getEnterprisedirectory().getEnterpriselist()) {
                if (e.getEnterprisetype() == Enterprise.EnterpriseType.BloodBank) {
                    bloodbankcombo.addItem(e.getOrganzationName());
                }
            }
        }
    }
    
        public void getCC() {
        logger.log(Level.INFO, "getOB --ProcessEMSNurseWorkRequestJPanel");

        for (Network net : ecosystem.getNetworkList()) {
            for (Enterprise e : net.getEnterprisedirectory().getEnterpriselist()) {
                if (e.getEnterprisetype() == Enterprise.EnterpriseType.CovidCare) {
                    CCcombobox.addItem(e.getOrganzationName());
                }
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BBReqLbl;
    private javax.swing.JLabel BloodBankLbl;
    private javax.swing.JComboBox<String> CCcombobox;
    private javax.swing.JLabel CCreqLbl;
    private javax.swing.JLabel Covidcenterlbl;
    private javax.swing.JComboBox<String> bloodbankcombo;
    private javax.swing.JLabel bloodgrouplb;
    private javax.swing.JLabel bloodneededBB;
    private javax.swing.JLabel bloodneededBB1;
    private javax.swing.JLabel bloodneededBB2;
    private javax.swing.JLabel bloodneededBB3;
    private javax.swing.JLabel bloodneededBB4;
    private javax.swing.JButton btnBackBB;
    private javax.swing.JRadioButton btnNoBB;
    private javax.swing.JRadioButton btnNoBB1;
    private javax.swing.JRadioButton btnNoBB2;
    private javax.swing.JRadioButton btnNoBB3;
    private javax.swing.JRadioButton btnNoBB4;
    private javax.swing.JRadioButton btnNoBB6;
    private javax.swing.JRadioButton btnNoBB7;
    private javax.swing.JRadioButton btnNoBB8;
    private javax.swing.JRadioButton btnNoCC;
    private javax.swing.JRadioButton btnYesBB;
    private javax.swing.JRadioButton btnYesBB1;
    private javax.swing.JRadioButton btnYesBB2;
    private javax.swing.JRadioButton btnYesBB3;
    private javax.swing.JRadioButton btnYesBB4;
    private javax.swing.JRadioButton btnYesBB6;
    private javax.swing.JRadioButton btnYesBB7;
    private javax.swing.JRadioButton btnYesBB8;
    private javax.swing.JRadioButton btnYesCC;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel ccneededBB5;
    private javax.swing.JComboBox<String> chooseCovidTypecombo;
    private javax.swing.JComboBox<String> choosebloodcombo;
    private javax.swing.JLabel emsnursewkarea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel msgtohoslbl;
    private javax.swing.JLabel noofunitsLb;
    private javax.swing.JLabel noofunitsOB;
    private javax.swing.JTextField patnametxt;
    private javax.swing.JTextField patreqnameBB;
    private javax.swing.JTextField patreqnameCC;
    private javax.swing.JLabel ptname;
    private javax.swing.JLabel ptnameBB;
    private javax.swing.JLabel ptnameOB;
    private javax.swing.JLabel reqCovidtype;
    private javax.swing.JButton sendreqbtBB;
    private javax.swing.JButton sendreqtoccbtn;
    private javax.swing.JTextField unitstxtBB;
    private javax.swing.JTextField unitstxtOB;
    // End of variables declaration//GEN-END:variables

}
