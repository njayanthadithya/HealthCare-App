/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Emergency.Emergencymanager;

import userinterface.Emergency.Emergencymanager.Emgmanagerpanel;
import Business.EmgPatient.EmgPatient;
import Business.EmgPatient.EmgPatientDirectory;
import Business.Enterprise.Enterprise;

import Business.Organization.DriverOrganization;
import Business.Organization.ECareOrganization;
import Business.Organization.Organization;
import Business.Patients.Patient;
import Business.UserAccount.UserAccount;
import Business.Ambulance.Ambulance;
import Business.Ambulance.Ambulancedirectory;
import Business.WorkQueue.EmgNurseRequest;
import Business.WorkQueue.TransferRequest;
import Business.WorkQueue.TransportRequest;
import Business.WorkQueue.WorkRequest;
import static Logger.Logger.logger;
import com.sun.glass.events.KeyEvent;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyAdapter;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ksahi
 */
public class ScheduleEmgServiceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EmergencyActionJPanel
     */
    private JPanel userProcessContainer;
    private Organization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Ambulancedirectory vehicleInformationList;
    private Ambulance vehicle;
    private EmgPatientDirectory EMSPatientDirectory;
    private EmgPatient EMSPatient;
    private int flag = 0;
    private Patient patientToTransfer;
    private Enterprise toEnterprise;

    ScheduleEmgServiceJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, EmgPatientDirectory EMSPatientDirectory, EmgPatient EMSPatient, Organization organization, Ambulance vehicle) {
        logger.log(Level.INFO, "ScheduleEmergencyServiceJPanel");

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.vehicleInformationList = enterprise.getAmbulancelist();
        this.vehicle = vehicle;
        this.EMSPatientDirectory = EMSPatientDirectory;
        this.EMSPatient = EMSPatient;
        this.organization = organization;
        vehiclenotxt.setEnabled(false);
        //populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransport = new javax.swing.JTable();
        backbt = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        refreshJButton = new javax.swing.JButton();
        submitbt = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        locacombobox = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        vehiclenotxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        patnametxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        conatctnumbertxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sourcetxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        destiantiontxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        tblTransport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Transfer to", "Request DateTime", "Assigned to", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblTransport);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backbt.setText("Back");
        backbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        backbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtActionPerformed(evt);
            }
        });
        add(backbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 80, 30));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("SCHEDULE EMERGENCY REQUEST");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 980, 29));

        refreshJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 380, 80, 30));

        submitbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        submitbt.setText("Submit");
        submitbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        submitbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbtActionPerformed(evt);
            }
        });
        add(submitbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 380, 80, 30));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Locality:");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 89, 30));

        locacombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a locality", "Alphnosus Street", "Fenway", "Ruggles", "Rxbury Crossing", "Huntington Avenue" }));
        locacombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locacomboboxActionPerformed(evt);
            }
        });
        add(locacombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, 242, -1));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Vehicle No:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, -1, -1));
        add(vehiclenotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, 242, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Patient Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, -1, -1));
        add(patnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 220, 242, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("ContactNo:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, -1, -1));

        conatctnumbertxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conatctnumbertxtActionPerformed(evt);
            }
        });
        conatctnumbertxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                conatctnumbertxtKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                conatctnumbertxtKeyTyped(evt);
            }
        });
        add(conatctnumbertxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 260, 242, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Source:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 300, -1, -1));
        add(sourcetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, 242, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Destination:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, -1, -1));

        destiantiontxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destiantiontxtActionPerformed(evt);
            }
        });
        add(destiantiontxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 340, 242, -1));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imaiges/medicare image 1.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        jLabel6.setMaximumSize(new java.awt.Dimension(1500, 1000));
        jLabel6.setMinimumSize(new java.awt.Dimension(1500, 1000));
        jLabel6.setPreferredSize(new java.awt.Dimension(1500, 1000));
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, -1));
    }// </editor-fold>//GEN-END:initComponents


 
//
//    private void populateTable() {
//        logger.log(Level.INFO, "populateTable --ScheduleEmgServiceJPanel");
//
//        DefaultTableModel dtm = (DefaultTableModel) hosptable.getModel();
//
//        dtm.setRowCount(0);
//        
//        for (WorkRequest wq : enterprise.getWorkqueue().getWorkrequestlist()) {
//            Object row[] = new Object[6];
//            row[0] = ((TransferRequest) wq);
//            row[1] = ((TransferRequest) wq).getSenderEnterprise();
//            row[2] = ((TransferRequest) wq).getEnterprise().getName();
//            row[3] = ((TransferRequest) wq).getTime();
//            try {
//                if (((TransferRequest) wq).getReceiver().equals("")) {
//                    row[4] = "No assignee yet";
//                } else {
//                    row[4] = ((TransferRequest) wq).getReceiver();
//                }
//            } catch (NullPointerException e) {
//                row[4] = "No assignee yet";
//            }
//            if (wq.getStatus().equals("0")) {
//                row[5] = "Pending";
//            } else if (wq.getStatus().equals("1")) {
//                row[5] = "In Progress";
//            } else if (wq.getStatus().equals("4")) {
//                row[5] = "Transferred";
//            }
//            dtm.addRow(row);
//
//        }
//
//    }

    private void locacomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locacomboboxActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "comboBoxLocalityActionPerformed --ScheduleEmergencyServiceJPanel");

        for (Ambulance vehicle : vehicleInformationList.getAmbulanceAList()) {
            if (String.valueOf(locacombobox.getSelectedItem()).equals(vehicle.getAvailableInArea()) && vehicle.isAvailability() == true) {
                vehiclenotxt.setText(vehicle.getAmbulanceNo());
                return;
            } else {
                vehiclenotxt.setText("");
            }
        }
    }//GEN-LAST:event_locacomboboxActionPerformed

    private void submitbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnScheduleActionPerformed --ScheduleEmergencyServiceJPanel");

        if (locacombobox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please select a locality");
            return;
        }

        String patientName = patnametxt.getText();
        if (patientName.isEmpty() || patientName == null) {
            JOptionPane.showMessageDialog(null, "Patient name cannot be empty");
            return;
        }
        if (locacombobox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please choose a locality");
            return;
        }

        String vehicleNo = vehiclenotxt.getText();
        if (vehicleNo.isEmpty() || vehicleNo == null) {
            JOptionPane.showMessageDialog(null, "Please choose a locality again as VehicleNo field is empty");
            return;
        }

        String contactNo = conatctnumbertxt.getText();
        if (contactNo.isEmpty() || contactNo == null) {
            JOptionPane.showMessageDialog(null, "Contact Number cannot be empty");
            return;
        }
        if (contactNo.length() > 10 || contactNo.length() < 10) {
            JOptionPane.showMessageDialog(null, "Only 10 numbers are allowed in ContactNo field");
            return;
        }

        String source = sourcetxt.getText();
        if (source.isEmpty() || source == null) {
            JOptionPane.showMessageDialog(null, "Pickup address cannot be empty");
            return;
        }

        String destination = destiantiontxt.getText();

        this.EMSPatient = new EmgPatient(patientName, contactNo, source, destination);
        EMSPatientDirectory.addEMSPatient(this.EMSPatient);

        for (Ambulance v : vehicleInformationList.getAmbulanceAList()) {
            if (v.getAmbulanceNo().equals(vehicleNo)) {
                this.vehicle = v;
                this.vehicle.setAmbulanceNo(vehicleNo);
                this.vehicle.setAvailability(false);
            }

        }

        TransportRequest tq = new TransportRequest(this.EMSPatient, this.vehicle);
        if(patientToTransfer != null){
            tq.setTransferPatient(patientToTransfer);
            tq.setRecieveEnterprise(toEnterprise);
            tq.setIsTransfer(true);
            patientToTransfer = null;
        }
        tq.setTaskStatus(TransportRequest.RequestPENDING);
        tq.setTime(LocalDateTime.now());
        tq.setIssuer(userAccount);

        EmgNurseRequest nurse = new EmgNurseRequest(this.EMSPatient);
        nurse.setTaskStatus(EmgNurseRequest.RequestPENDING);
        nurse.setIssuer(userAccount);
        nurse.setMessage("Emergency Patient");
        nurse.setIssuer(userAccount);
        nurse.setTime(LocalDateTime.now());

        Organization organization = null;
        if (enterprise.getEnterprisetype() == Enterprise.EnterpriseType.EmergencyCare) {
            for (Organization org : enterprise.getOrganizationdirectory().getOrganizationAList()) {
                if (org instanceof DriverOrganization) {
                    organization = org;
                    organization.getWorkqueue().getWorkRequestAList().add(tq);
                    userAccount.getWorkqueue().getWorkRequestAList().add(tq);
                    organization = null;

                }
                if (org instanceof ECareOrganization) {
                    organization = org;
                    organization.getWorkqueue().getWorkRequestAList().add(nurse);
                    userAccount.getWorkqueue().getWorkRequestAList().add(nurse);
                    organization = null;
                }
            }
        }
        if (flag == 1) {
           
            patnametxt.setEnabled(true);
        }

        JOptionPane.showMessageDialog(null, "Your work request has been scheduled!", "success", JOptionPane.PLAIN_MESSAGE);

        patnametxt.setText("");
        conatctnumbertxt.setText("");
        sourcetxt.setText("");
        vehiclenotxt.setText("");
        destiantiontxt.setText("");
        locacombobox.setSelectedIndex(0);
        patnametxt.setEnabled(true);


    }//GEN-LAST:event_submitbtActionPerformed


    private void conatctnumbertxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_conatctnumbertxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_conatctnumbertxtKeyPressed

    private void conatctnumbertxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_conatctnumbertxtKeyTyped
        // TODO add your handling code here:
        logger.log(Level.INFO, "conatctnumbertxtKeyTyped --ScheduleEmergencyServiceJPanel");

        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar))
                || (vchar == KeyEvent.VK_BACKSPACE)
                || (vchar == KeyEvent.VK_DELETE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Please enter a number");
        }
    }//GEN-LAST:event_conatctnumbertxtKeyTyped

    private void backbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "backbtActionPerformed --ScheduleEmergencyServiceJPanel");

        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        Component[] comps = this.userProcessContainer.getComponents();
        for (Component comp : comps) {
            if (comp instanceof Emgmanagerpanel) {
                Emgmanagerpanel createP = (Emgmanagerpanel) comp;
                createP.getTabletransport();
                createP.getTablenurse();
            }
            layout.previous(userProcessContainer);
        }
    }//GEN-LAST:event_backbtActionPerformed

    private void destiantiontxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destiantiontxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_destiantiontxtActionPerformed

    private void conatctnumbertxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conatctnumbertxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_conatctnumbertxtActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        logger.log(Level.INFO, "refreshJButtonActionPerformed --ScheduleEmergencyServiceJPanel");

        //populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbt;
    private javax.swing.JTextField conatctnumbertxt;
    private javax.swing.JTextField destiantiontxt;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> locacombobox;
    private javax.swing.JTextField patnametxt;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTextField sourcetxt;
    private javax.swing.JButton submitbt;
    private javax.swing.JTable tblTransport;
    private javax.swing.JTextField vehiclenotxt;
    // End of variables declaration//GEN-END:variables

}
