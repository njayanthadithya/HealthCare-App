/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Location.Location;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Patients.Patient;
import Business.WorkQueue.MessageNurseToHosRequest;
import Business.WorkQueue.TransportRequest;
import Business.WorkQueue.WorkRequest;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jayanthadithya
 */
public class TransferReqJpanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;

    /**
     * Creates new form TransferRequest
     */
    public TransferReqJpanel(JPanel userProcessContainer, Enterprise enterprise) {
        logger.log(Level.INFO, "TransferReqpanel");
        initComponents();
        this.enterprise = enterprise;
        this.userProcessContainer = userProcessContainer;
        gettable();
        getcombobox();

    }

    public void gettable() {
        logger.log(Level.INFO, "gettable --TransferReqpanel");

        DefaultTableModel mod = (DefaultTableModel) reqtable.getModel();
        mod.setRowCount(0);
        if (enterprise.getWorkqueue().getWorkRequestAList().size() > 0) {
            for (WorkRequest workreq : enterprise.getWorkqueue().getWorkRequestAList()) {
                if (workreq.getClass().getName().contains("TransportWorkRequest")) {
                    if (((TransportRequest) workreq).isIsTransfer()) {
                        Object row[] = new Object[1];
                        row[0] = ((TransportRequest) workreq).getTransferPatient();
                        mod.addRow(row);
                    }
                }
            }
        }
    }

    public void getcombobox() {
       logger.log(Level.INFO, "getcombobox --TransferReqpanel");

        OrganizationDirectory org = enterprise.getOrganizationdirectory();

        for (Organization o : org.getOrganizationAList()) {
            if (o.getOrganzationName().equals("Doctor Organization")) {
                for (Employee u : o.getEmployeedirectory().getEmployeeAList()) {
                    doctorcombobox.addItem(u.toString());
                }
            }
        }
        for (Location loc : enterprise.getLocationlist().getLocationAList()) {
            lcationcombobox.addItem(loc.getLocName());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        reqtable = new javax.swing.JTable();
        admitbt = new javax.swing.JButton();
        backbt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pathrntxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        doctorcombobox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lcationcombobox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reqtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient"
            }
        ));
        jScrollPane1.setViewportView(reqtable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, -1, 186));

        admitbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        admitbt.setText("Admit");
        admitbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        admitbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admitbtActionPerformed(evt);
            }
        });
        add(admitbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, 80, 29));

        backbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backbt.setText("Back");
        backbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        backbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtActionPerformed(evt);
            }
        });
        add(backbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 80, 29));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Patient ID:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, -1, -1));
        add(pathrntxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 150, 152, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Doctor:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, -1, -1));

        doctorcombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Doctor" }));
        add(doctorcombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 190, 150, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Location:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, -1, -1));

        lcationcombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Location" }));
        add(lcationcombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, 150, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Transfer Request");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 920, -1));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imaiges/medicare image 1.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        jLabel5.setMaximumSize(new java.awt.Dimension(1500, 1000));
        jLabel5.setMinimumSize(new java.awt.Dimension(1500, 1000));
        jLabel5.setPreferredSize(new java.awt.Dimension(1500, 1000));
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 950));
    }// </editor-fold>//GEN-END:initComponents

    private void admitbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admitbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "admitbtActionPerformed --IncomingRequest");

        if (doctorcombobox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please Select a Doctor");
            return;
        }
        if (lcationcombobox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select a Location");
            return;
        }
        if (pathrntxt.getText().length() == 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please enter HRN");
            return;
        }
        for (Patient patient : enterprise.getPatientdirectory().getPatientAList()) {
            if (patient.getPatientHRN().equals(pathrntxt.getText())) {
                JOptionPane.showMessageDialog(userProcessContainer, "HRN already exist");
                return;
            }
        }
        int selectedRow = reqtable.getSelectedRow();
        if (selectedRow >= 0) {
            Patient pat = (Patient) reqtable.getValueAt(selectedRow, 0);
            String emp = doctorcombobox.getSelectedItem().toString();
            ArrayList<Organization> org = enterprise.getOrganizationdirectory().getOrganizationAList();
            for (Organization o : org) {
            if (o.getOrganzationName().equals("Doctor Organization")) {
            for (Employee e : o.getEmployeedirectory().getEmployeeAList()) {
            if (e.getEmployeeName().equals(emp)) {
            String location = lcationcombobox.getSelectedItem().toString();
            for (Location locat : enterprise.getLocationlist().getLocationAList()) {
          if (locat.getLocName().equals(location)) {
             if (locat.getNurseAList().size() == 0) {
             JOptionPane.showMessageDialog(userProcessContainer, "Currently nurse is not available in this location");
                       return;
                                    }
            if (locat.getMax() >= (locat.getCount() + 1)) {
             Patient newPatient = enterprise.getPatientdirectory().addPatient();
              newPatient.setDoctorName(e);
               newPatient.setLocation(locat);
               newPatient.setpName(pat.getpName());
                newPatient.setPatientHRN(pathrntxt.getText());
               newPatient.setAllergies(pat.getAllergies());
                  newPatient.setBloodGroup(pat.getBloodGroup());
                 newPatient.setMedList(pat.getMedList());
                locat.setCount(locat.getCount() + 1);
                  JOptionPane.showMessageDialog(userProcessContainer, "In patient Admitted");

                    for (WorkRequest workreq : enterprise.getWorkqueue().getWorkRequestAList()) {
                       if (workreq.getClass().getName().contains("TransportWorkRequest")) {
                       if (((TransportRequest) workreq).getTransferPatient().getpName().
                          equals(pat.getpName())) {
                          enterprise.getWorkqueue().getWorkRequestAList().remove(workreq);
                         break;
                                                }
                       }
                    }
//                         
                 gettable();
                 return;
                 } else {
                 JOptionPane.showMessageDialog(userProcessContainer, locat.getLocName()+ " is already full");
                                 
                 return;
                                    }
          }
            }
            }
            }
            }
            }

        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select a patient");
            return;
        }

    }//GEN-LAST:event_admitbtActionPerformed

    private void backbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtActionPerformed
        // TODO add your handling code here:
        
         logger.log(Level.INFO, " backbtActionPerformed--TransferReqpanel");
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backbtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton admitbt;
    private javax.swing.JButton backbt;
    private javax.swing.JComboBox<String> doctorcombobox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> lcationcombobox;
    private javax.swing.JTextField pathrntxt;
    private javax.swing.JTable reqtable;
    // End of variables declaration//GEN-END:variables
}
