/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.BloodBank;

import Business.BloodGroup.BloodGroup;
import Business.BloodGroup.Bloodgrouplist;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.PhysicianOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BloodReqToNewBloodBank;
import Business.WorkQueue.LabTestRequest;
import Business.WorkQueue.WorkRequest;
import static Logger.Logger.logger;
import javax.swing.JPanel;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rutvi Patel
 */
public class testBloodJPanel extends javax.swing.JPanel {

    /**
     * Creates new form testBloodJPanel
     */
    private JPanel userProcessContainer;
    private PhysicianOrganization organization;
    private Enterprise enterprise;
    private UserAccount useraccount;
    private BloodGroup bloodgrp;
    private Bloodgrouplist bloodgrplist;
    private EcoSystem ecosystem;

    testBloodJPanel(JPanel userProcessContainer, BloodGroup bloodgrp, Bloodgrouplist bloodgrplist, Enterprise enterprise, UserAccount useraccount, EcoSystem ecosystem) {
        
        logger.log(Level.INFO, "testBloodJPanel");
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.bloodgrp = bloodgrp;
        this.bloodgrplist = bloodgrplist;
        this.ecosystem = ecosystem;
        this.useraccount = useraccount;
        this.enterprise = enterprise;
        this.organization = organization;
        
        getreitemstable();

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backbt = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        reqitemtable = new javax.swing.JTable();
        manageEnt2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backbt.setText("Back");
        backbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        backbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtActionPerformed(evt);
            }
        });
        add(backbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 90, 30));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("CLINICIAN WORK REQUEST AREA");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 22, 936, -1));

        reqitemtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BLOOD GROUP", "TOTAL UNITS", "REQUEST STATUS", "ASSIGNED TO", "IMPURE UNITS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(reqitemtable);
        if (reqitemtable.getColumnModel().getColumnCount() > 0) {
            reqitemtable.getColumnModel().getColumn(0).setResizable(false);
            reqitemtable.getColumnModel().getColumn(1).setResizable(false);
            reqitemtable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 129, 659, 143));

        manageEnt2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        manageEnt2.setText("Requested Items");
        add(manageEnt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, 196, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imaiges/medicare image 1.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(1500, 1000));
        jLabel1.setMinimumSize(new java.awt.Dimension(1500, 1000));
        jLabel1.setPreferredSize(new java.awt.Dimension(1500, 1000));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void getreitemstable() {
        logger.log(Level.INFO, "getreitemstable --testBloodJPanel");

        DefaultTableModel md = (DefaultTableModel) reqitemtable.getModel();

        md.setRowCount(0);

        for (WorkRequest ua : useraccount.getWorkqueue().getWorkRequestAList()) {
                 if(ua.getClass().getName().contains("LabTestWorkRequest")){
            Object[] row = new Object[5];
            row[0] = ((LabTestRequest) ua);          
            row[1] = ((LabTestRequest) ua).getBloodBagUnits();
            row[2] = ((LabTestRequest) ua).getTaskStatus();
            try {
                row[3] = ua.getReceipient().getEmployeeUser().getEmployeeName();
            } catch (NullPointerException e) {
                row[3] = "No Assignee Yet";
            }
            try{
                row[4] = ((LabTestRequest)ua).getImpureUnits();
            }
            catch(NullPointerException e) {
                row[4] = "Not Updated Yet";
            }
            md.addRow(row);
        }
        }
    }
    
    private void backbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtActionPerformed
        // TODO add your handling code here:
      //  logger.log(Level.INFO, "BtnBackActionPerformed --SendReqJPanel");
        logger.log(Level.INFO, "backbtActionPerformed --testBloodJPanel");
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        Physicianworkareapanel dwjp = (Physicianworkareapanel) component;
        dwjp.gettable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backbtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel manageEnt2;
    private javax.swing.JTable reqitemtable;
    // End of variables declaration//GEN-END:variables
}
