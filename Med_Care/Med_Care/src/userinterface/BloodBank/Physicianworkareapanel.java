/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.BloodBank;

import Business.BloodGroup.BloodGroup;
import Business.BloodGroup.Bloodgrouplist;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.PhysicianOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rutvi Patel
 */
public class Physicianworkareapanel extends javax.swing.JPanel {

    /**
     * Creates new form Physicianworkareapanel
     */
    private JPanel userProcessContainer;
    private PhysicianOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private BloodGroup bloodgroup;
    private Bloodgrouplist bloodgrouplist;
    private EcoSystem ecosystem;

    public Physicianworkareapanel(JPanel userProcessContainer,  UserAccount userAccount,PhysicianOrganization organization, Enterprise enterprise, EcoSystem ecosystem) {
        logger.log(Level.INFO, "Clinicianworkareapanel");
        
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
        this.bloodgrouplist = enterprise.getBloodgrouplist();
        gettable();
    }

    

    

    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OverallBloodTable = new javax.swing.JTable();
        btnUpdateBloodUnits = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnHospitalReq1 = new javax.swing.JButton();
        btnEMSReq1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Blood Details");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CLINICIAN WORK AREA");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 780, -1));

        OverallBloodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BLOOD GROUP", "AVAILABLE UNITS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(OverallBloodTable);
        if (OverallBloodTable.getColumnModel().getColumnCount() > 0) {
            OverallBloodTable.getColumnModel().getColumn(0).setResizable(false);
            OverallBloodTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 130, 383, 231));

        btnUpdateBloodUnits.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnUpdateBloodUnits.setText("Update Blood Units");
        btnUpdateBloodUnits.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        btnUpdateBloodUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBloodUnitsActionPerformed(evt);
            }
        });
        add(btnUpdateBloodUnits, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 394, 140, 29));

        btnRefresh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 440, 140, 29));

        btnCreate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCreate.setText("New Blood Group");
        btnCreate.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 394, 149, 29));

        btnHospitalReq1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnHospitalReq1.setText("View Hospital Work Requests");
        btnHospitalReq1.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        btnHospitalReq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalReq1ActionPerformed(evt);
            }
        });
        add(btnHospitalReq1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 261, 29));

        btnEMSReq1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnEMSReq1.setText("View Emergency Requests");
        btnEMSReq1.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        btnEMSReq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEMSReq1ActionPerformed(evt);
            }
        });
        add(btnEMSReq1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 220, 261, 29));

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("View Blood Test Requests");
        jButton3.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 300, 261, 29));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imaiges/medicare image 1.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setMaximumSize(new java.awt.Dimension(1500, 1080));
        jLabel3.setMinimumSize(new java.awt.Dimension(1500, 1000));
        jLabel3.setPreferredSize(new java.awt.Dimension(1500, 1000));
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 970));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnRefreshActionPerformed --Clinicianworkareapanel");

        gettable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnUpdateBloodUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBloodUnitsActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnUpdateBloodUnitsActionPerformed --Clinicianworkareapanel");

        int selectedrow = OverallBloodTable.getSelectedRow();

        if (selectedrow >= 0) {
            BloodGroup bg = (BloodGroup) OverallBloodTable.getValueAt(selectedrow, 0);
            Viewblooddetpanel panel = new Viewblooddetpanel(userProcessContainer, bg, bloodgrouplist,enterprise,userAccount);
            userProcessContainer.add("CreateJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } 
        else{
        JOptionPane.showMessageDialog(null, "Please select a BloodGroup"); }


    }//GEN-LAST:event_btnUpdateBloodUnitsActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnCreateActionPerformed --Clinicianworkareapanel");

        Createbloodgrppanel panel = new Createbloodgrppanel(userProcessContainer, bloodgroup, bloodgrouplist);
        userProcessContainer.add("CreateJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnHospitalReq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalReq1ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnHospitalReq1ActionPerformed --Clinicianworkareapanel");

        hospreqpanel panel = new hospreqpanel(userProcessContainer, bloodgroup, bloodgrouplist, enterprise, userAccount, ecosystem);
        userProcessContainer.add("CreateJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnHospitalReq1ActionPerformed

    private void btnEMSReq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEMSReq1ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnEMSReq1ActionPerformed --Clinicianworkareapanel");

        Emgreqpanel panel = new Emgreqpanel(userProcessContainer, bloodgroup, bloodgrouplist, enterprise, userAccount, ecosystem);
        userProcessContainer.add("CreateJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnEMSReq1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "jButton3ActionPerformed --Clinicianworkareapanel");

        testBloodJPanel panel = new testBloodJPanel(userProcessContainer, bloodgroup, bloodgrouplist, enterprise, userAccount, ecosystem);
        userProcessContainer.add("CreateJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed


    void gettable() {
        logger.log(Level.INFO, "gettable --Clinicianworkareapanel");

        DefaultTableModel dtm = (DefaultTableModel) OverallBloodTable.getModel();
        dtm.setRowCount(0);

        for (BloodGroup bloodgroup : bloodgrouplist.getBloodGroupAList()) {

            Object row[] = new Object[2];
            row[0] = bloodgroup;
            row[1] = bloodgroup.getAvailUnits();
            
            dtm.addRow(row);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OverallBloodTable;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnEMSReq1;
    private javax.swing.JButton btnHospitalReq1;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdateBloodUnits;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
