/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.AllergyType.Allergy;
import Business.Medicine.Medicine;
import Business.Patients.Patient;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/*
 * @author jayanthadithya
 */
public class allergypanel extends javax.swing.JPanel {

    /**
     * Creates new form allergypanel
     */
    private JPanel userProcessContainer;
    private Patient pat;

    public allergypanel(JPanel userProcessContainer, Patient pat) {
        logger.log(Level.INFO, "allergypanel");

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.pat = pat;
        getstatictabel();
        getpatienttable();
    }

    public void getpatienttable() {
        logger.log(Level.INFO, "getpatienttable --allergypanel");

        DefaultTableModel mod = (DefaultTableModel) allergytable2.getModel();
        mod.setRowCount(0);
        if (pat.getAllergies().getAllergyList().size() == 0) {
            return;
        }
        for (Allergy allergy : pat.getAllergies().getAllergyList()) {
            Object row[] = new Object[2];
            row[0] = allergy;
            int count = 0;
            String cmp = null;
            for (String compound : allergy.getCmp()) {
                if (count == 0) {
                    cmp = compound;
                } else {
                    cmp = cmp + ", " + compound;
                }
                count++;
            }
            row[1] = cmp;
            mod.addRow(row);
        }
    }

    public void getstatictabel() {
        logger.log(Level.INFO, "getstatictabel --allergypanel");

        ArrayList<Allergy> allergies = new ArrayList<Allergy>();
        ArrayList<String> lactCompunds = new ArrayList<String>();
        lactCompunds.add("clemastine");
        lactCompunds.add("Sugar");
        lactCompunds.add("Sucrose");
        Allergy lactallergy = new Allergy("Lactose Intolerance", lactCompunds);
        allergies.add(lactallergy);

        DefaultTableModel mod = (DefaultTableModel) allergytable1.getModel();
        mod.setRowCount(0);

        for (Allergy allergy : allergies) {
            Object row[] = new Object[2];
            row[0] = allergy;
            int count = 0;
            String compounds = null;
            for (String compound : allergy.getCmp()) {
                if (count == 0) {
                    compounds = compound;
                } else {
                    compounds = compounds + ", " + compound;
                }
                count++;
            }
            row[1] = compounds;
            mod.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        allergytable2 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        allergytable1 = new javax.swing.JTable();
        allallergy = new javax.swing.JButton();
        removealergybt = new javax.swing.JButton();
        backbt = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        allergytable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Allergy", "Compounds"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(allergytable2);
        if (allergytable2.getColumnModel().getColumnCount() > 0) {
            allergytable2.getColumnModel().getColumn(0).setResizable(false);
            allergytable2.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 270, 375, 110));

        allergytable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Allergy", "Compounds"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(allergytable1);
        if (allergytable1.getColumnModel().getColumnCount() > 0) {
            allergytable1.getColumnModel().getColumn(0).setResizable(false);
            allergytable1.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 122, 375, 95));

        allallergy.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        allallergy.setText("Add Allergy");
        allallergy.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        allallergy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allallergyActionPerformed(evt);
            }
        });
        add(allallergy, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 223, 80, 29));

        removealergybt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        removealergybt.setText("Remove Allergy");
        removealergybt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        removealergybt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removealergybtActionPerformed(evt);
            }
        });
        add(removealergybt, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 386, 120, 29));

        backbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backbt.setText("Back");
        backbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        backbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtActionPerformed(evt);
            }
        });
        add(backbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 80, 29));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Allergy Panel");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 30, 800, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imaiges/medicare image 1.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(1500, 1000));
        jLabel1.setMinimumSize(new java.awt.Dimension(1500, 1000));
        jLabel1.setPreferredSize(new java.awt.Dimension(1500, 1000));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void allallergyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allallergyActionPerformed
        // TODO add your handling code here:
       
        logger.log(Level.INFO, "allallergyActionPerformed --allergypanel");
        int selectedRow = allergytable1.getSelectedRow();
        if (selectedRow >= 0) {
            Allergy aller = (Allergy) allergytable1.getValueAt(selectedRow, 0);
            if (pat.getAllergies().checkIfExist(aller)) {
                Medicine medicine = pat.getMedList().checkMedicineandaddAllergy(aller);
                if (medicine == null) {
                    pat.getAllergies().addAllergy(aller);
                    JOptionPane.showMessageDialog(userProcessContainer, "Allergy added successfully");
                    getpatienttable();
                    return;
                } else {
                    int yesno = JOptionPane.YES_NO_OPTION;
                    int option = JOptionPane.showConfirmDialog(userProcessContainer, "Curreclty medication has been prescribed "
                            + " which is allergic to the patient. Do you want to discontinue medication and add allergy", "Override Warning",
                            yesno);
                    if (option == JOptionPane.YES_OPTION) {
                        medicine.setIsdiscontiued(true);
                        pat.getAllergies().addAllergy(aller);
                        getpatienttable();
                        return;
                    } else {
                        int secondoption = JOptionPane.showConfirmDialog(userProcessContainer, "Do you still want to add allergy?", "Warning",
                                yesno);
                        if (secondoption == JOptionPane.YES_OPTION) {
                            pat.getAllergies().addAllergy(aller);
                            getpatienttable();
                            return;
                        } else {
                            getpatienttable();
                            return;
                        }
                    }
                }

            } else {
                JOptionPane.showMessageDialog(userProcessContainer, "Allergy has already been added");
                getpatienttable();
                return;
            }
        }
    }//GEN-LAST:event_allallergyActionPerformed

    private void removealergybtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removealergybtActionPerformed
        // TODO add your handling code here:
         logger.log(Level.INFO, "removealergybtActionPerformed --allergypanel");

        int selectedRow = allergytable2.getSelectedRow();
        if (selectedRow >= 0) {
            Allergy allergy = (Allergy) allergytable2.getValueAt(selectedRow, 0);
            pat.getAllergies().getAllergyList().remove(allergy);
            JOptionPane.showMessageDialog(userProcessContainer, "Allergy removed successfully");
            return;
        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select a allergy to remove");
            return;
        }

    }//GEN-LAST:event_removealergybtActionPerformed

    private void backbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "backbtActionPerformed --allergypanel");

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backbtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allallergy;
    private javax.swing.JTable allergytable1;
    private javax.swing.JTable allergytable2;
    private javax.swing.JButton backbt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton removealergybt;
    // End of variables declaration//GEN-END:variables
}
