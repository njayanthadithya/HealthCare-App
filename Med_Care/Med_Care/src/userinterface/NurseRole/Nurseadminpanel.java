/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NurseRole;

import Business.Enterprise.Enterprise;
import Business.Location.Location;
import Business.Medicine.Medicine;
import Business.Medicine.MedAdministration;
import Business.Patients.Patient;
import Business.UserAccount.UserAccount;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jayanthadithya
 */
public class Nurseadminpanel extends javax.swing.JPanel {

    /**
     * Creates new form Nurseadminpanel
     */
    private JPanel userProcessContainer;
    private Location location;
    private Enterprise enterprise;
    private UserAccount useraccount;

    public Nurseadminpanel(JPanel userProcessContainer, Location location, Enterprise enterprise, UserAccount useraccount ) {
        logger.log(Level.INFO, "Nurseadminpanel");

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.location = location;
        this.enterprise = enterprise;
        this.useraccount = useraccount;
        this.gettable();
    }

    public void gettable() {
        logger.log(Level.INFO, "gettable --Nurseadminpanel");

        DefaultTableModel mod = (DefaultTableModel) pattable.getModel();
        mod.setRowCount(0);
        for (Patient pat : this.enterprise.getPatientdirectory().getPatientAList()) {
            if (pat.getLocation() != null) {
                if (pat.getLocation().getLocName().equals(location.getLocName())) {
                    if (!pat.isIsDischarged()) {
                        Object[] row = new Object[1];
                        row[0] = pat;
                        mod.addRow(row);
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        pattable = new javax.swing.JTable();
        medbt = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        adminbt = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table3 = new javax.swing.JTable();
        admindoebt = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pattable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pattable);
        if (pattable.getColumnModel().getColumnCount() > 0) {
            pattable.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 243, 140));

        medbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        medbt.setText("Medications to Administer");
        medbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        medbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medbtActionPerformed(evt);
            }
        });
        add(medbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 219, 190, 40));

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medication", "Route", "Frequency", "Duration", "Discontinued", "Completed"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table1);
        if (table1.getColumnModel().getColumnCount() > 0) {
            table1.getColumnModel().getColumn(0).setResizable(false);
            table1.getColumnModel().getColumn(1).setResizable(false);
            table1.getColumnModel().getColumn(2).setResizable(false);
            table1.getColumnModel().getColumn(3).setResizable(false);
            table1.getColumnModel().getColumn(4).setResizable(false);
            table1.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 470, 120));

        adminbt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        adminbt.setText("Administer Medication");
        adminbt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        adminbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminbtActionPerformed(evt);
            }
        });
        add(adminbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, 190, 40));

        table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medication", "Day", "Sequence"
            }
        ));
        jScrollPane3.setViewportView(table3);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, 470, 120));

        admindoebt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        admindoebt.setText("Administer Dose");
        admindoebt.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        admindoebt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admindoebtActionPerformed(evt);
            }
        });
        add(admindoebt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 610, 140, 40));

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setText("Back");
        jButton4.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 610, 100, 40));

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton5.setText("Clear Selection");
        jButton5.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(110, 208, 202)));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 219, 140, 40));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Nurse Admin");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 830, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imaiges/medicare image 1.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(1500, 1000));
        jLabel1.setMinimumSize(new java.awt.Dimension(1500, 1000));
        jLabel1.setPreferredSize(new java.awt.Dimension(1500, 1000));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void medbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "medbtActionPerformed --Nurseadminpanel");

        pattable.setEnabled(false);
        getmedtable();
    }//GEN-LAST:event_medbtActionPerformed

    private void adminbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "adminbtActionPerformed --Nurseadminpanel");

        table1.setEnabled(false);
        this.getdsetable();
    }//GEN-LAST:event_adminbtActionPerformed

    private void getmedtable() {
        logger.log(Level.INFO, "getmedtable --Nurseadminpanel");

        DefaultTableModel mod = (DefaultTableModel) table1.getModel();
        mod.setRowCount(0);
        int selectedRow = pattable.getSelectedRow();
        if (selectedRow >= 0) {
            Patient pat = (Patient) pattable.getValueAt(selectedRow, 0);
            if (pat.getMedList().getMedAList().size() > 0) {
                for (Medicine med : pat.getMedList().getMedAList()) {
                    if (!med.isIsdischarged()) {
                        Object[] row = new Object[6];
                        row[0] = med;
                        row[1] = med.getRoute();
                        row[2] = med.getL();
                        row[3] = med.getK();

                        if (med.isIsdiscontiued()) {
                            row[4] = "Yes";
                        } else {
                            row[4] = "No";
                        }
                        int flag = 0;
                        for (MedAdministration medAdmin : med.getMedicineadmin()) {
                            if (!medAdmin.getIsadmin()) {
                                row[5] = "No";
                                mod.addRow(row);
                                flag = 1;
                                break;
                            }
                        }
                        if (flag == 0) {
                            row[5] = "Yes";
                            mod.addRow(row);
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Select a Patient");
            return;
        }
    }

    private void getdsetable() {
       logger.log(Level.INFO, "getdsetable --Nurseadminpanel");

        DefaultTableModel mod = (DefaultTableModel) table3.getModel();
        mod.setRowCount(0);
        int flag = 0;
        int selectedRow = table1.getSelectedRow();
        if (selectedRow >= 0) {
            Medicine medicine = (Medicine) table1.getValueAt(selectedRow, 0);
            if (!medicine.isIsdiscontiued()) {
                for (MedAdministration medAdmin : medicine.getMedicineadmin()) {
                    if (!medAdmin.getIsadmin()) {
                        Object[] row = new Object[3];
                        row[0] = medicine.getMedName();
                        row[1] = medAdmin;
                        row[2] = medAdmin.getTime();
                        mod.addRow(row);
                        flag = 1;
                    }
                }
                if (flag == 0) {
                    getmedtable();
                    table1.setEnabled(true);
                }
            } else {
                JOptionPane.showMessageDialog(userProcessContainer, "Medicine has been Stopped by the doctor");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Select a mediaction to administer");
            return;
        }

    }
    private void admindoebtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admindoebtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "admindoebtActionPerformed --Nurseadminpanel");
        int selectedRow = table3.getSelectedRow();
        if (selectedRow == 0) {
            MedAdministration medicineadmin = (MedAdministration) table3.getValueAt(selectedRow, 1);

            if (!medicineadmin.getIsadmin()) {

                medicineadmin.setIsadmin(Boolean.TRUE);
                medicineadmin.setAdministered(useraccount.getEmployeeUser());
                JOptionPane.showMessageDialog(userProcessContainer, "Dose Administered");
                this.getdsetable();
                return;

            }
        } else if (selectedRow > 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select First dose to administer");
            return;
        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select a dose to administer");
            return;
        }
    }//GEN-LAST:event_admindoebtActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:   
        logger.log(Level.INFO, "jButton4ActionPerformed --Nurseadminpanel");

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "jButton5ActionPerformed --Nurseadminpanel");

        pattable.setEnabled(true);
        table1.setEnabled(true);
        DefaultTableModel model2 = (DefaultTableModel) table1.getModel();
        model2.setRowCount(0);
        DefaultTableModel model3 = (DefaultTableModel) table3.getModel();
        model3.setRowCount(0);
        this.gettable();
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adminbt;
    private javax.swing.JButton admindoebt;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton medbt;
    private javax.swing.JTable pattable;
    private javax.swing.JTable table1;
    private javax.swing.JTable table3;
    // End of variables declaration//GEN-END:variables
}
