/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NurseRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Location.Location;
import Business.Medicine.Medicine;
import Business.Organization.Adminorganization;
import Business.Organization.Doctororganization;
import Business.Organization.Nurseorganization;
import Business.Organization.Organization;
import Business.Patients.Patient;
import Business.UserAccount.Useraccount;
import Business.WorkQueue.DischargeReqtoNurse;
import Business.WorkQueue.WorkRequest;
import static Logger.Logger.logger;
//import Mail.SendMail;
//import javax.mail.MessagingException;
import java.awt.CardLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.AdministrativeRole.Createpatientpanel;

/**
 *
 * @author krish
 */
public class NurseWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Nurseorganization organization;
    private Enterprise enterprise;
    private Useraccount userAccount;

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public NurseWorkAreaJPanel(JPanel userProcessContainer, Useraccount account, Nurseorganization organization, Enterprise enterprise) {
        logger.log(Level.INFO, "NurseWorkAreaJPanel");
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        populateTable();
        populateReq();
    }

    public void populateReq() {
        logger.log(Level.INFO, "populateReq --NurseWorkAreaJPanel");

        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        for (WorkRequest req : organization.getWorkqueue().getWorkrequestlist()) {
            if (req.getClass().getName().contains("DischargeReqtoNurse")) {
                if (!((DischargeReqtoNurse) req).getPatient().isIsDischarged()) {
                    if (((DischargeReqtoNurse) req).getPatient().getLocation().getNurselist().contains(userAccount.getEmpuser())
                            && req.getStatus().equals("0")) {
                        Object[] row = new Object[2];
                        row[0] = ((DischargeReqtoNurse) req);
                        if (req.getStatus().equals("0")) {
                            row[1] = "Yet to be Discharged";
                        } else if (req.getStatus().equals("1")) {
                            row[1] = "Discharged";
                        }
                        model.addRow(row);
                    }
                }
            }
        }
    }

    public void populateTable() {
        logger.log(Level.INFO, "populateTable --NurseWorkAreaJPanel");

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (Location loc : enterprise.getLocationlist().getLocationlist()) {
            for (Employee emp : loc.getNurselist()) {
                if (emp.getEmpname().equals(this.userAccount.getEmpuser().getEmpname())) {
                    Object[] row = new Object[1];
                    row[0] = loc;
                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BtnAdminister = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 334, 131));

        BtnAdminister.setText("Administer");
        BtnAdminister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAdministerActionPerformed(evt);
            }
        });
        add(BtnAdminister, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient", "Sender"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 334, 168));

        jButton1.setText("Discharge");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 500, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void BtnAdministerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAdministerActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "BtnAdministerActionPerformed --NurseWorkAreaJPanel");
        try {
            int selectedRow = jTable1.getSelectedRow();
            if (selectedRow >= 0) {
                Location location = (Location) jTable1.getValueAt(selectedRow, 0);
                NurseAdministerJPanel nurseAdministerJPanel = new NurseAdministerJPanel(userProcessContainer, location, enterprise, userAccount);
                userProcessContainer.add("prescribeJPanel", nurseAdministerJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } else {
                JOptionPane.showMessageDialog(userProcessContainer, "Please select a location");
            }
        } catch (Exception e) {
            logger.log(Level.INFO, "BtnAdministerActionPerformed --NurseWorkAreaJPanel" + e.getMessage());
        }

    }//GEN-LAST:event_BtnAdministerActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "jButton1ActionPerformed --NurseWorkAreaJPanel");

        try {
            int selectedRow = jTable2.getSelectedRow();
            if (selectedRow >= 0) {
                DischargeReqtoNurse dischargereq = (DischargeReqtoNurse) jTable2.getValueAt(selectedRow, 0);
                if (!dischargereq.getPatient().isIsDischarged()) {

                    dischargereq.setStatus("1");
                    Location location = dischargereq.getPatient().getLocation();
                    location.setCount(location.getCount() - 1);
                    dischargereq.getPatient().setIsDischarged(true);
//                    new Thread(new Runnable() {
//                        public void run() {
//                            try {
//                                SendMail.sendMail(enterprise.getMailID(), "Hi, Patient Discharge Alert Discharged by Nurse \n\n"
//                                        + "Patient Name : " + dischargereq.getPatient().getPatientName() + "\nPatient HRN : "
//                                        + dischargereq.getPatient().getPatientHRN()
//                                        + "\nBlood Group : " + dischargereq.getPatient().getBloodGroup()
//                                        + "\nLocation : " + dischargereq.getPatient().getLocation().getName()
//                                        + "\nDoctor : " + dischargereq.getPatient().getDoctor().getName(),
//                                        dischargereq.getPatient().getPatientHRN());
//                                dischargereq.getPatient().setLocation(null);
//                                dischargereq.getPatient().setDoctor(null);
//                            } catch (MessagingException ex) {
//                                Logger.getLogger(Createpatientpanel.class.getName()).log(Level.SEVERE, null, ex);
//                            }
//                        }
//                    }).start();
                    for (Medicine med : dischargereq.getPatient().getMedList().getMedicationlist()) {
                        med.setIsdischarged(true);
                    }
                    JOptionPane.showMessageDialog(userProcessContainer, "Discharged");
                    populateReq();
                    populateTable();
                    return;
                } else {
                    JOptionPane.showMessageDialog(userProcessContainer, "Patient has been discharged already");
                    return;
                }
            }
        } catch (Exception e) {
            logger.log(Level.INFO, "populateReq --NurseWorkAreaJPanel" + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAdminister;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
