/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Location.Location;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author monishmm
 */
public class Locationdetailspanel extends javax.swing.JPanel {

    /**
     * Creates new form Locationdetailspanel
     */
    private JPanel userProcessContainer;
    private Location location;
    private OrganizationDirectory organizationdirectory;

    public Locationdetailspanel(JPanel userProcessContainer, Location location, OrganizationDirectory organizationdirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.location = location;
        this.organizationdirectory = organizationdirectory;
        gettable();
        getcombobox();
    }

   
    public void gettable() {
        logger.log(Level.INFO, "populateTable --LocationDetails");

        DefaultTableModel nursemodel = (DefaultTableModel) nursetable.getModel();
        nursemodel.setRowCount(0);
        if (location.getNurselist().size() == 0) {
            return;
        }
        for (Employee e : location.getNurselist()) {
            Object row[] = new Object[1];
            row[0] = e.getEmpname();
            nursemodel.addRow(row);
        }
    }

    public void getcombobox() {
        logger.log(Level.INFO, "populateComboBox --LocationDetails");

        for (Organization o : organizationdirectory.getOrglist()) {
            if (o.getName().equals("Nurse Organization")) {
                for (Employee e : o.getEmployeedirectory().getEmployeelist()) {
                    nursebox.addItem(e.getEmpname());
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        nursetable = new javax.swing.JTable();
        nursebox = new javax.swing.JComboBox<>();
        assignbt = new javax.swing.JButton();
        nurselb = new javax.swing.JLabel();
        backbt = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nursetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nurse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(nursetable);
        if (nursetable.getColumnModel().getColumnCount() > 0) {
            nursetable.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 136, 375, 139));

        nursebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Nurse" }));
        add(nursebox, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 81, -1, -1));

        assignbt.setText("Assign to Location");
        assignbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignbtActionPerformed(evt);
            }
        });
        add(assignbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(633, 6, -1, -1));

        nurselb.setText("Nurse");
        add(nurselb, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 85, -1, -1));

        backbt.setText("Back");
        backbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtActionPerformed(evt);
            }
        });
        add(backbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assignbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "BtnAssignActionPerformed --LocationDetails");

        if (nursebox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please choose a Nurse to assign");
        } else {
            for (Organization o : organizationdirectory.getOrglist()) {
            if (o.getName().equals("Nurse Organization")) {
            for (Employee emp : o.getEmployeedirectory().getEmployeelist()) {
            if (nursebox.getSelectedItem().toString().equals(emp.getEmpname())) {
            if (location.checkNurse(emp)) {
            location.addNurse(emp);
            gettable();
            return;
            } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Nurse is already assigned ");
            return;
            }
            }
            }
            }
            }
        }

    }//GEN-LAST:event_assignbtActionPerformed

    private void backbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "BackButtonActionPerformed --LocationDetails");

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backbtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignbt;
    private javax.swing.JButton backbt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> nursebox;
    private javax.swing.JLabel nurselb;
    private javax.swing.JTable nursetable;
    // End of variables declaration//GEN-END:variables
}
